/* TODO: Refaire tout le css de facon coherente. */
/* Il me faut gerer toutes les histoires de font size et de logo size */
.sr-only:not(:focus):not(:active){
    clip: rect(0 0 0 0); 
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap; 
    width: 1px;
    background-color: red;
}

.nav {
    background-color: #191919;
    color: white;
    /* TODO: creer une variable avec du clamp pour gerer la taille des logos  et du texte */ --size: clamp(0.75rem, 1.5vw, 2rem);
}
.nav__content {
    display:flex;
    align-items: center;
    justify-content: space-between;
    padding-block: 1rem;
    position: relative;
    /* font-size: 1.5rem; */
}

.logo {
    --logo-size: 3em;
    width: var(--logo-size);
    height: var(--logo-size);
} 

.links {
    display:flex;
    align-items: center;
    gap: 2rem;
}

.hamburger_icon {
    display: none;
}

.link {
    position: relative;
    opacity: 0.7;
}

.link::after {
    content: '';
    width: 0px; 
    height: 2px;
    background-color: white;
    /* background-color: #8c8c8c; */
    position: absolute;
    bottom: -10px;
    left: 0;
}

/* .link:is(:hover, :focus) .link::after { */
.link:hover::after, 
.link:focus::after {
    /* NOTE: Cela marche sur la taille max mais je veux que ce soit responsive */
    /* width: 30px; */
    width: 2em;
    transition-property: width;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
}

/* TODO: Changer la couleur en fonction de la position sur la page. */


.link:is(:hover, :focus) {
    cursor: pointer;
    /* TODO: Changer la couleur inital en un truc plus sombre et blanc on hover. */
    color: white;
    opacity: 1;
    transition: opacity 100ms ease-in-out;
}

.link:is(:hover, :focus) .link:hover::after,
.link:is(:hover, :focus) .link:focus::after {
    opacity: 1;
    transition: opacity 100ms ease-in-out;
}

.contact_btn {
    padding: 0.3em 0.9em;
}

/* Ici je vais faire tout le styling lie au menu mobile */

.mobile-nav-toggle {
    display: none;
}

.mobile-nav-toggle:is(:hover, :focus){
    cursor: pointer;
}

.gwada {
    position: relative;
}

.gwada::after ,
.gwada::before {
    content: '';
    background-repeat:no-repeat;
    position: absolute;
    width: 100%;
    height: 100%;
}
.gwada::after {
    background-image: url("../images/hero/gribouilli.svg");
    /* TODO: Changer cela pour ne pas avoir de valeurs absolus mais des chosese relatives a la taille du font. */
    bottom: -1.5em;
    left: 50%;
    transform: translateX(-50%);
}

@media(max-width: 41em){
    .mobile-nav-toggle {
        display: block;
        position:absolute;
        right: 2rem;
        top: 50%;
        transform: translateY(-50%);
        width: 1.5rem;
        background-color: transparent;
        aspect-ratio: 1;
        background-image: url("../images/hero/hamburger.svg");
        background-size: cover;
        border: none;
        z-index: 9999; 
    }

    .mobile-nav-toggle[aria-expanded="true"]{
        background-image: url("../images/hero/close.svg");
    }

    .contact_btn {
        position: relative;
        opacity: 0.7;
        background:none;
        padding: 0
    }

    .contact_btn::after {
        content: '';
        width: 0px; 
        height: 2px;
        background-color: white;
        position: absolute;
        bottom: -10px;
        left: 0;
    }

    .contact_btn:hover::after, 
    .contact_btn:focus::after {
        width: 2em;
        transition-property: width;
        transition-duration: 300ms;
        transition-timing-function: ease-in-out;
    }

    /* TODO: Changer la couleur en fonction de la position sur la page. */


    .contact_btn:is(:hover, :focus) {
        cursor: pointer;
        background:none;
        /* TODO: Changer la couleur inital en un truc plus sombre et blanc on hover. */
        color: white;
        opacity: 1;
        transition: opacity 100ms ease-in-out;
    }

    .contact_btn:is(:hover, :focus) .contact_btn:hover::after,
    .contact_btn:is(:hover, :focus) .contact_btn:focus::after {
        opacity: 1;
        transition: opacity 100ms ease-in-out;
    }

    .links {
        display: flex;
        gap: 2rem;
        /* font-size: 1.3rem; */
        position: fixed;
        inset: 0 0 0 40%;
        flex-direction: column;
        padding: 8em 2em;
        align-items: start;
        background:hsl(0 0% 0% / 0.75);
        z-index: 1000; 
        transform: translateX(100%);
        transition: transform 350ms ease-out;
    }

    .links[data-visible="true"]{
        transform: translateX(0%);
    }

    @supports( backdrop-filter : blur(1rem)){
        .links {
            backdrop-filter : blur(1rem);
        }
    }
}

